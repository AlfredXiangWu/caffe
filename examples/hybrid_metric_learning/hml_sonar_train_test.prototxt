name: "hml_sonar_net"
layers {
  name: "data"
  type: PAIR_DATA
  top: "data"
  top: "label"
  top: "data2"
  top: "label2"
  pair_data_param{
	  source: "../../data/UCI/sonar/sonar_train_lmdb"
	  backend: LMDB
	  source_list: "../../data/UCI/sonar/sonar_train_data_list.txt"
	  pairs_list: "../../data/UCI/sonar/sonar_train_pair_list.txt"	  
	  batch_size: 30
	}
  include: { phase: TRAIN }
}

layers {
  name: "data"
  type: PAIR_DATA
  top: "data"
  top: "label"
  top: "data2"
  top: "label2"
  pair_data_param{
	  source: "../../data/UCI/sonar/sonar_test_lmdb"
	  backend: LMDB
	  source_list: "../../data/UCI/sonar/sonar_test_data_list.txt"
	  pairs_list: "../../data/UCI/sonar/sonar_test_pair_list.txt"	  
	  batch_size: 16
	}
	include: { phase: TEST }
}

layers{
  name: "fc1"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
	num_output: 15
	weight_filler {
	  type: "xavier"
	}
	bias_filler {
	  type: "constant"
	  value: 0.1
	}	
  }  
  bottom: "data"
  top: "fc1"
   	param: "fc1_w"
	param: "fc1_b"  
}

layers{
  name: "relu10"
  type: SIGMOID
  bottom: "fc1"
  top: "fc1"
}

layers{
  name: "dropout1"
  type: DROPOUT
  dropout_param{
	dropout_ratio:0.8
  }
  bottom: "fc1"
  top: "dropout1"
}
layers{
  name: "fc2"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param{
	num_output: 2
	weight_filler {
	  type: "xavier"
	}
	bias_filler {
	  type: "constant"
	  value: 0.1
	}	
  }
  bottom: "dropout1"
  top: "fc2"
}

layers {
  name: "softmax"
  type: SOFTMAX
  bottom: "fc2"
  top: "prob"
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "prob"
  bottom: "label"
  top: "accuracy"
}


layers{
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc2"
  bottom: "label"
  loss_weight: 0.5  
}



# -----  shadow net

layers{
  name: "fc1_p"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
	num_output: 15
	weight_filler {
	  type: "xavier"
	}
	bias_filler {
	  type: "constant"
	  value: 0.1
	}	
  }  
  bottom: "data2"
  top: "fc1_p"
   	param: "fc1_w"
	param: "fc1_b"  
}

layers{
  name: "relu10_p"
  type: SIGMOID
  bottom: "fc1_p"
  top: "fc1_p"
}

layers{
  name: "dropout1_p"
  type: DROPOUT
  dropout_param{
	dropout_ratio:0.5
  }
  bottom: "fc1_p"
  top: "dropout1_p"
}
layers{
  name: "fc2_p"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param{
	num_output: 2
	weight_filler {
	  type: "xavier"
	}
	bias_filler {
	  type: "constant"
	  value: 0.1
	}	
  }
  bottom: "dropout1_p"
  top: "fc2_p"
}


layers {
  name: "softmax"
  type: SOFTMAX
  bottom: "fc2_p"
  top: "prob_p"
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "prob_p"
  bottom: "label2"
  top: "accuracy_p"
}


layers{
  name: "loss_p"
  type: SOFTMAX_LOSS
  bottom: "fc2_p"
  bottom: "label2"
  loss_weight: 0.8 
}

# ------------------

layers {
	name: "flatten"
	type: FLATTEN
	bottom: "fc1"
	top: "feat"
}

layers {
	name: "flatten_p"
	type: FLATTEN
	bottom: "fc1_p"
	top: "feat2"
}


layers {
	name: "feat_diff"
	type: ELTWISE
	bottom: "feat"
	bottom: "feat2"
	top: "feat_diff"
	eltwise_param {
		operation: SUM
		coeff: 1
		coeff: -1
	}
}

layers {
	name: "abs"
	type: ABSVAL
	bottom: "feat_diff"
	top: "feat_absdiff"
}

layers{
  name: "fc_verif_1"
  type: INNER_PRODUCT

  inner_product_param{
	num_output: 10
	weight_filler {
	  type: "gaussian"
	  std: 0.1
	}
	bias_filler {
	  type: "constant"
	  value: 0
	}	
  }
  bottom: "feat_absdiff"
  top: "fc_verif_1" 
}

layers {
  name: "relu_verif_1"
  type: SIGMOID
  bottom: "fc_verif_1"
  top: "fc_verif_1"
}


layers {
	name: "dropout_verif"
	type: DROPOUT
  bottom: "fc_verif_1"
  top: "fc_verif_1"
  dropout_param {
    dropout_ratio: 0.8
  }
}


layers{
  name: "fc_verif_2"
  type: INNER_PRODUCT

  inner_product_param{
	num_output: 2
	weight_filler {
	  type: "gaussian"
	  std: 0.1
	}
	bias_filler {
	  type: "constant"
	  value: 0
	}	
  }
  bottom: "fc_verif_1"
  top: "fc_verif_2"  
}

layers {
	name: "binary_label"
	type: BINARY_LABEL
	bottom: "label"
	bottom: "label2"
	top: "label_verif"
}


layers {
  name: "softmax_verif"
  type: SOFTMAX
  bottom: "fc_verif_2"
  top: "prob_verif"
  #include: { phase: TEST }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "prob_verif"
  bottom: "label_verif"
  top: "accuracy_verif"
  #include: { phase: TEST }
}

layers{
  name: "loss_verif"
  type: SOFTMAX_LOSS
  bottom: "fc_verif_2"
  bottom: "label_verif"
  loss_weight: 2 
}